name: '🏷️'

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  increment-version:
    if: github.event_name == 'pull_request' && !contains(github.event.issue.labels.*.name, 'norelease')
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: 16.x
      - run: npm ci
      - run: git checkout origin/master package.json
      - name: Get Current Version
        id: version
        uses: actions/github-script@v6
        with:
          result-encoding: string
          script: |
            const fs = require('fs');
            return JSON.parse(fs.readFileSync('./package.json')).version;
      - run: git restore package.json
      - name: Increment Version
        id: inc-version
        uses: actions/github-script@v6
        with:
          result-encoding: string
          script: |
            const { execSync } = require('child_process');
            const fs = require('fs');
            const semver = require('semver');
            const version = '${{ steps.version.outputs.result }}';
            // get version level from PR label
            const LABEL_PREFIX = 'release:';
            const releaseLabels = context.payload.pull_request.labels
              .map((label) => label.name)
              .filter((label) => label.startsWidth(LABEL_PREFIX));
            if (releaseLabels.length > 1) {
              setFailed(`Found more than one release label: ${releaseLabels.join(', ')}`);
              return;
            }
            // increment version
            const nextVersion = semver.inc(version, releaseLabels[0]?.replace(LABEL_PREFIX, '') || 'prerelease', 'rc');

            // write file
            fs.writeFileSync('./package.json', JSON.stringify({ 
              ...JSON.parse(fs.readFileSync('./package.json')), 
              version: nextVersion
            }, null, 2));
            execSync('npx prettier --write package.json');

            return nextVersion !== version ? nextVersion: '';
      - name: Commit & Push
        if: steps.inc-version.outputs.result
        run: |
          git config user.name github-actions[bot]
          git config user.email github-actions[bot]@users.noreply.github.com
          git add package.json
          git commit -m "v${{ steps.inc-version.outputs.result }}"
          git push
  release-on-push:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v3
      - name: Get version
        id: version
        uses: actions/github-script@v6
        with:
          result-encoding: string
          script: |
            const fs = require('fs');
            const { version } = JSON.parse(fs.readFileSync('./package.json'));
            return version;
      - name: Release on Push
        uses: rymndhng/release-on-push-action@v0.27.0
        with:
          release_name: v${{ steps.version.outputs.result }}
